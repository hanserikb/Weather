@model WeatherApp.ViewModels.HomeIndexViewModel

@{
    var locationSearchOptions = new AjaxOptions
    {
        UpdateTargetId = "location",
        Url = Url.Action("Index"),
        OnSuccess = "showSpinner",
        OnFailure = "handleAjaxFailure",
        OnBegin = "addRecentSearch",
        OnComplete = "hideSpinner"
    }; 
}
<style>
    .ui-autocomplete-loading { background: white url(@Url.Content("~/Content/themes/base/images/ui-anim_basic_16x16.gif") right center no-repeat; }
</style>

<div class="row">
    <div class="span10">
        <h2>Search location</h2>
        
        @using (Ajax.BeginForm(locationSearchOptions))
        {
                @Html.ValidationSummary(false)
                    @*@Html.LabelFor(model => model.LocationName)*@
                        @Html.EditorFor(model => model.LocationName)
                         
                    <input type="submit" value="Search" class="primary btn" title="Search location" /><a href="#" class="btn success" id="getGeoLocation" title="Get the latest weather forecast for your position">Your position</a>
                
        }
    </div>
</div>
    <div class="row">
    <div class="span8">
            <div id="bookmarks">
                <h2>Bookmarks</h2><a href="#" id="clearBookmarks" title="Clear your bookmarks" class="label notice" onclick="clearBookmarks(); return false; ">Clear</a>
                <ul>
            
                </ul>
            
            </div>
    </div>
    <div class="span8">
        <div id="recentSearches">
                <h2>Recent searches</h2><a href="#" title="Clear your recent searches" id="clearRecent" class="label notice" onclick="clearRecentSearches(); return false; ">Clear</a>
                <ul>
            
                </ul>
           
        </div>
    </div>
</div>
<div class="row">
    <div class="span16">
        <div id="location">      
            @if (@Model != null && @Model.WeatherDatas != null)
            {
                @Html.Partial("_ForeCast");
            }
        </div>
    </div>
</div>

@section BodyEnd
{
    <script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/bootstrap-modal.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/scripts.js")" type="text/javascript"></script>


    <script type="text/javascript">
        var url = "@Url.Action("Forecast")";
        $(function () {
            geoLocation();
            renderRecentSearchList();
            renderBookmarkList();

            

            $("#LocationName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("FindDistinctLocations")',
                        type: "POST",
                        dataType: "json",
                        data: { locationName: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    value: item
                                }
                            }));
                        }
                    });
                },
                minLength: 3
            });
        });
        var handleAjaxSuccess = function(ajaxContext) {
            console.log("success");
            $(".validation-summary-errors").addClass("validation-summary-valid").removeClass("validation-summary-errors");
        }

        var handleAjaxFailure = function(ajaxContext) {
            console.log("fail");
            $(".validation-summary-valid").addClass("validation-summary-errors").removeClass("validation-summary-valid");
            $(".validation-summary-errors ul").empty();
            if (ajaxContext.responseText === "Bad Request") {
                $(".validation-summary-errors ul").append("<li>Could not find location</li>");
            }else{
                $(".validation-summary-errors ul").append("<li>" + ajaxContext.responseText + "</li>");
            }
            $("#location").empty();
        }

        /*
         * Lägger till sökningen i localStorage
         */

        var addRecentSearch = function() {

            // Sparar undan söksträngen och gemeniserar(?!) den.
            var searchString = $("#LocationName").val();
            searchString = searchString.toLowerCase();


            if (Modernizr.localstorage) {
                    var recentSearches = [];
                    
                    // Hämtar tidigare sökningar om dem finns
                    if (localStorage.getItem('recentSearches') !== null) { 
                        recentSearches = JSON.parse(localStorage.getItem('recentSearches'));
                    }

                    // Kontrollerar om sökningen redan finns.
                    // Funktionen returnerar indexet eller -1 om den inte finns
                    var recentIndex = $.inArray(searchString, recentSearches);

                    // Om arrayen är längre 10 och sökningen inte redan finns i arrayen, ta bort första elementet
                    if (recentSearches.length >= 10 && recentIndex <= 0) {
                        recentSearches.shift();             
                    }

                    // Om elementet redan finns i arrayen, ta bort den
                    if (recentIndex >= 0) {
                        recentSearches.splice(recentIndex, 1);
                    }
                    
                    // Lägg till sökningen i arrayen
                    recentSearches.unshift(searchString);
                    console.log(recentSearches);
                    // Sätt arrayen till localstorage
                    localStorage.setItem('recentSearches', JSON.stringify(recentSearches));
                    
                    // Rendera söklistan på nytt
                    renderRecentSearchList();
            };
        };

        var renderRecentSearchList = function() {
            // jättefullösning för att hitta roten till sidan
            var root = $("form#form0").attr("data-ajax-url");

            // Sparar referens till listan
            var recentSearchList = $("#recentSearches ul");

            // Tömmer listan
            recentSearchList.empty();

            if (localStorage.getItem('recentSearches') === null) {
                return false;
            }
     
            // Hämtar ut de tidigare sökningarna
            var recentSearches = JSON.parse(localStorage.getItem('recentSearches'));
   
            // Itererar genom arrayen, skriver ut en länk i listan.
            $.each(recentSearches, function(index, recentSearch) {
              var recentSearchListItem = $("<li><a class='recentWeatherLink' data-ajax='true' data-ajax-method='POST' data-ajax-mode='replace' data-ajax-success='renderMapMarkers' data-ajax-update='#location' href='"+ root + "?LocationName=" + recentSearch + "'>" + recentSearch + "</a></li>");
               recentSearchList.append(recentSearchListItem);
            });

        }

        /*
         * Rensar tidigare sökningar ifrån localstorage samt tömmer lista
         */
        var clearRecentSearches = function() {
            if (localStorage.getItem('recentSearches') !== null) { 
                    localStorage.removeItem("recentSearches");
                    $("#recentSearches ul").empty();           
            }
        }  
        
    </script>
}
